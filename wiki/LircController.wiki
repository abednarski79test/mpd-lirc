<g:plusone size="medium"></g:plusone>

== Introduction: ==
I would like to be able to intercept click, double click and hold event from the remote controller.
Standard Linux remote controller daemon LIRC does not allows for intercepting any other event then click.

== Emulating remote controller events ==
To test software dependent on signals coming from LIRC daemon without having physical remote receiver LIRC daemon needs to be run in the mode that allows to simulate signals, there are 2 options to do that:
 * kill currently running daemon:
 <code language="bash">
 service lirc stop
 </code>
 * run daemon from command line:
 <code language="bash">
 lircd --nodaemon --allow-simulate /etc/lirc/lircrc
 </code>
OR
 * edit file:
 <code language="bash">
 /etc/lirc/hardware.conf
 </code>
 and change line containing LIRCD_ARGS to:
 <code language="bash">
 LIRCD_ARGS="--allow-simulate"
 </code>
 * restart LIRC daemon
 <code language="bash">
 service lirc restart
 </code>
After introducing those changes scripts methods for simulating LIRC events can be used:
<code language="bash">
./resources/script/dev/simulate-lirc_FORWARD-CLICK.sh
./resources/script/dev/simulate-lirc_FORWARD-DOUBLE_CLICK.sh
./resources/script/dev/simulate-lirc_FORWARD-HOLD-x5.sh
./resources/script/dev/simulate-lirc_MENU-CLICK.sh
./resources/script/dev/simulate-lirc_MINUS-CLICK.sh
./resources/script/dev/simulate-lirc_MINUS-DOUBLE_CLICK.sh
./resources/script/dev/simulate-lirc_MINUS-HOLD-x5.sh
./resources/script/dev/simulate-lirc_PLAY-CLICK.sh
./resources/script/dev/simulate-lirc_PLUS-CLICK.sh
./resources/script/dev/simulate-lirc_PLUS-DOUBLE_CLICK.sh
./resources/script/dev/simulate-lirc_PLUS-HOLD-x5.sh
./resources/script/dev/simulate-lirc_REVERSE-CLICK.sh
./resources/script/dev/simulate-lirc_REVERSE-DOUBLE_CLICK.sh
./resources/script/dev/simulate-lirc_REVERSE-HOLD-x5.sh
</code>
Above commands are suitable for Apple remote.
To create scripts for your remote you need to have actual remote receiver and LIRC daemon configured and running :
 * run command:
 <code language="bash">
 irw
 </code>
 * click button for which you would like to create script
 * copy output of the command to your script
Next time you will be able to generate LIRC event on your development environment without have physical remote receiver.

== Useful commands ==
During development following commands were very useful:
 * sending termination SIGTERM signal to the main application thread
 <code language="bash">
 ps -aef | grep python | grep conf
 </code>
 find the one with lowest PID number (main thread) and use it to send termination signal
 <code language="bash">
 kill -s TERM <MAIN_THREAD_PID>
 </code>

Also source contains number of utility commands:
* ./resources/script/dev/run-app.sh - runs application with development version of configuration files
* ./resources/script/dev/simulate-lirc_NNN-MMM.sh - generates LIRC event, more details in section "Emulating remote controller events"
* ./resources/script/prod/run-app_basic.sh - runs application with most basic configuration (single click events only)
* ./resources/script/prod/run-app_advanced.sh - runs application with more advanced configuration (double click events added)
* ./resources/script/prod/run-app_full.sh - runs application with full configuration (hold events added)
* ./resources/script/prod/run-app_menu.sh - runs application with support for menu functionality (switching sets of commands)
* ./resources/script/prod/run-app_full_2.sh - runs application with full configuration as it will be run in production server
* ./resources/script/prod/lirc-controller.sh - init script for Debian system

== Links ==
 * http://www.lirc.org/ - LIRC daemon
 * http://pymotw.com/2/select/index.html#module-select - great explanation how select.select works in Python